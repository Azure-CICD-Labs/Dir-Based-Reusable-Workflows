name: Reusable Terraform Apply

on:
  workflow_call:
    inputs:
      subdirectory:
        description: "Path to the Terraform folder"
        required: true
        type: string
      environment_name:
        description: "Environment name for gating (e.g. dev-apply or prod-apply)"
        required: true
        type: string
      plan_filename:
        description: "Name of the .tfplan file"
        required: true
        type: string
      artifact_name:
        description: "Name of the plan artifact"
        required: true
        type: string
      tfstate_key:
        description: "Backend state file name"
        required: true
        type: string
      checkout_ref:
        description: "Git ref/sha to check out"
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: "true"
      ARM_SKIP_PROVIDER_REGISTRATION: "true"
      TF_VAR_env: ${{ inputs.environment_name }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.checkout_ref }}
          fetch-depth: 0

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ inputs.subdirectory }}

      - name: Terraform Init
        working-directory: ${{ inputs.subdirectory }}
        run: |
          terraform init \
            -backend-config="container_name=${{ vars.TFSTATE_CONTAINER_NAME }}" \
            -backend-config="key=${{ inputs.tfstate_key }}"

      - name: Terraform Apply
        working-directory: ${{ inputs.subdirectory }}
        run: terraform apply -auto-approve ${{ inputs.plan_filename }}
